import { beforeEach, describe, test } from "vitest";
import { expect } from "chai";
import { Board } from "../src/Board.mjs";
import { Tetromino } from "../src/Tetromino.mjs";
import { drop } from "lodash";

function fallToBottom(board) {
  for (let i = 0; i < 10; i++) {
    board.tick();
  }
}

describe("Line clean", () => {
  let board;
  beforeEach(() => {
    board = new Board(10, 6);
  });

  test("cleans a line", () => {
    board.drop(Tetromino.I_SHAPE);
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        ..........
        ...IIII...`
    );
    board.drop(Tetromino.T_SHAPE);
    board.moveLeft();
    board.moveLeft();
    board.moveLeft();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        .T........
        TTTIIII...`
    );
    board.drop(Tetromino.T_SHAPE);
    board.moveRight();
    board.moveRight();
    board.moveRight();
    board.moveRight();
    expect(board.toString()).to.equalShape(
      `........T.
        .......TTT
        ..........
        ..........
        .T........
        TTTIIII...`
    );
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        ..........
        .T......T.`
    );
  });

  test("clean multiple lines", () => {
    board.drop(Tetromino.O_SHAPE);
    board.moveLeft();
    board.moveLeft();
    board.moveLeft();
    board.moveLeft();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        OO........
        OO........`
    );
    board.drop(Tetromino.O_SHAPE);
    board.moveLeft();
    board.moveLeft();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        OOOO......
        OOOO......`
    );
    board.drop(Tetromino.O_SHAPE);
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        OOOOOO....
        OOOOOO....`
    );
    board.drop(Tetromino.O_SHAPE);
    board.moveRight();
    board.moveRight();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        OOOOOOOO..
        OOOOOOOO..`
    );
    board.drop(Tetromino.O_SHAPE);
    board.moveRight();
    board.moveRight();
    board.moveRight();
    board.moveRight();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      `..........
        ..........
        ..........
        ..........
        ..........
        ..........`
    );
  });
});
