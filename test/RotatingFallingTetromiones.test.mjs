import { beforeEach, describe, test } from "vitest";
import { expect } from "chai";
import { Board } from "../src/Board.mjs";
import { Tetromino } from "../src/Tetromino.mjs";
import { NewTetromino } from "../src/NewTetromino.mjs";

function fallToBottom(board) {
  for (let i = 0; i < 10; i++) {
    board.tick();
  }
}

describe("Rotating falling tetrominoes", () => {
  let board;
  beforeEach(() => {
    board = new Board(10, 6);
  });

  test("a tetromino can be rotated left", () => {
    board.drop(NewTetromino.T_SHAPE);
    board.rotateLeft();
    expect(board.toString()).to.equalShape(
      `....T.....
       ...TT.....
       ....T.....
       ..........
       ..........
       ..........`
    );
  });

  test("a tetromino can be rotated right", () => {
    board.drop(NewTetromino.T_SHAPE);
    board.rotateRight();
    expect(board.toString()).to.equalShape(
      `...T......
       ...TT.....
       ...T......
       ..........
       ..........
       ..........`
    );
  });

  test("a tetromino cannot be rotated when there is no room", () => {
    board.drop(NewTetromino.I_SHAPE);
    board.moveLeft();
    board.rotateRight();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      ` ..........
        ..........
        ..I.......
        ..I.......
        ..I.......
        ..I.......`
    );
    board.drop(NewTetromino.I_SHAPE);
    board.moveRight();
    board.moveRight();
    board.rotateRight();
    fallToBottom(board);
    expect(board.toString()).to.equalShape(
      ` ..........
        ..........
        ..I..I....
        ..I..I....
        ..I..I....
        ..I..I....`
    );
    board.drop(NewTetromino.T_SHAPE);
    board.rotateRight();
    board.moveDown();
    expect(board.toString()).to.equalShape(
      ` ..........
        ...T......
        ..ITTI....
        ..IT.I....
        ..I..I....
        ..I..I....`
    );
    board.rotateLeft();
    expect(board.toString()).to.equalShape(
      ` ..........
        ...T......
        ..ITTI....
        ..IT.I....
        ..I..I....
        ..I..I....`
    );
  });

  test("a tetromino can kick the wall and rotate", () => {
    board.drop(Tetromino.T_SHAPE);
    board.moveLeft();
    board.moveLeft();
    board.moveLeft();
    board.rotateRight();
    board.moveLeft();
    expect(board.toString()).to.equalShape(
      `T.........
       TT........
       T.........
       ..........
       ..........
       ..........`
    );
    board.rotateLeft();
    expect(board.toString()).to.equalShape(
      `.T........
       TTT.......
       ..........
       ..........
       ..........
       ..........`
    );
  });
});
